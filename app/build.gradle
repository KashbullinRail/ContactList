plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'realm-android'
}

// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")
// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()
// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {

    signingConfigs {
        release {
            keyAlias 'keyContactList'
            storeFile file('D:\\android\\release\\ContactList\\contactListKey.jks')
            storePassword '1q2w3e4r'
            keyPassword '1q2w3e4r'
        }
    }
    compileSdk 33

    defaultConfig {
        applicationId "com.example.contactlist"
        minSdk 25
        targetSdk 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        def mySetting1 = true
        def mySetting2 = false
        def encrypt_prefs_name = "SOULD_ENCRYPT_NAME"

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [
                    crashlyticsCollectionEnabled: "true",
                    applicationIdSuffix: "",
                    someProperty1: mySetting1,
                    someProperty2: mySetting2
            ]
            buildConfigField "String", "APPLICATION_ID_SUFFIX", "\"\""
            buildConfigField "boolean", "IS_ANALYTICS_ENABLED", "true"
            buildConfigField "boolean", encrypt_prefs_name, "true"
            signingConfig signingConfigs.release
            multiDexEnabled true
        }
        preview {
            debuggable true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [
                    crashlyticsCollectionEnabled: "false",
                    applicationIdSuffix: ".preview",
                    someProperty1: mySetting1,
                    someProperty2: mySetting2
            ]
            applicationIdSuffix ".preview"
            versionNameSuffix '-preview'
            buildConfigField "String", "APPLICATION_ID_SUFFIX", "\".preview\""
            buildConfigField "boolean", "IS_ANALYTICS_ENABLED", "true"
            buildConfigField "boolean", encrypt_prefs_name, "true"
        }
        debug {
            debuggable true
            manifestPlaceholders = [
                    crashlyticsCollectionEnabled: "false",
                    applicationIdSuffix: ".debug",
                    someProperty1: mySetting1,
                    someProperty2: mySetting2
            ]
            applicationIdSuffix ".debug"
            versionNameSuffix '-debug'
            buildConfigField "String", "APPLICATION_ID_SUFFIX", "\".debug\""
            buildConfigField "boolean", "IS_ANALYTICS_ENABLED", "true"
            buildConfigField "boolean", encrypt_prefs_name, "false"
            signingConfig signingConfigs.release
        }

    }

    sourceSets {
        release {
            java.srcDirs = ['src/release/java']
            res.srcDirs = ['src/release/res']
        }
        preview {
            manifest.srcFile 'src/debug/AndroidManifest.xml'
            java.srcDirs = ['src/debug/java']
            res.srcDirs = ['src/debug/res']
        }
        debug {
            manifest.srcFile 'src/debug/AndroidManifest.xml'
            java.srcDirs = ['src/debug/java']
            res.srcDirs = ['src/debug/res']
        }
    }

    flavorDimensions 'api', 'version'

    productFlavors {
        demo {
            dimension 'version'
        }
        full {
            dimension 'version'
        }
        minApi23 {
            dimension 'api'
            minSdkVersion '23'
            versionNameSuffix "-minApi23"
        }
        minApi29 {
            dimension 'api'
            minSdkVersion '29'
            versionNameSuffix "-minApi29"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError true
    }
    buildFeatures {
        viewBinding true
    }

}

dependencies {
    // Custom libs
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    // Koin Core features
    implementation "io.insert-koin:koin-core:$koin_version"
    // Koin main features for Android
    implementation "io.insert-koin:koin-android:$koin_android_version"
    // Test libs
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$ext_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test:runner:$test_runner_version"
    androidTestImplementation "androidx.test:rules:$test_rules_version"
    // Koin Test features
    testImplementation "io.insert-koin:koin-test:$koin_version"
    // Koin for JUnit 4
    testImplementation "io.insert-koin:koin-test-junit4:$koin_version"
    // Koin for JUnit 5
    testImplementation "io.insert-koin:koin-test-junit5:$koin_version"
}
